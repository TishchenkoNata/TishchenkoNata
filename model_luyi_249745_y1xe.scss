const isPalindrome = str => str === str.split("").reverse().join("");
grape

console.log(getRandomString());
const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);
orange / 99,53,76,92,24,15,36,51,81,43,50,42,63,56,42,1,76,55,76,25,69,92,65,62,19,50,90,69,87,74,59,16,92,17,95,40,44,2,87,88,44,90
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
grape

const sum = (a, b) => a + b;
const generateUUID = () => `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;

const removeDuplicates = array => Array.from(new Set(array));
const capitalizeString = str => str.toUpperCase();

apple

const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");

const sum = (a, b) => a + b;
const binarySearch = (array, target) => { let start = 0, end = array.length - 1; while (start <= end) { const mid = Math.floor((start + end) / 2); if (array[mid] === target) return mid; else if (array[mid] < target) start = mid + 1; else end = mid - 1; } return -1; };
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
grape

const findSmallestNumber = numbers => Math.min(...numbers);
const findAverage = numbers => numbers.reduce((sum, num) => sum + num, 0) / numbers.length;
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));

const camelCaseToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);
